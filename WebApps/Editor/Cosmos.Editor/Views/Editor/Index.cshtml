@using Cosmos.Cms.Services
@model List<ArticleListItem>
@{
    ViewData["Title"] = "Web Page Inventory";

    var publisherUrl = ViewData["PublisherUrl"];
    var isReviewer = User.IsInRole("Reviewers");
    var canEdit = User.IsInRole("Administrators") || User.IsInRole("Editors");

    var homeArticleNumber = (int)ViewData["HomePageArticleNumber"];
    var showFirstPageBtn = (bool)ViewData["ShowFirstPageBtn"];
    var showNotFoundBtn = (bool)ViewData["ShowNotFoundBtn"];

    var rowCount = (int)ViewData["RowCount"];
    var sortOrder = (string)ViewData["sortOrder"];
    var currentSort = (string)ViewData["currentSort"];
    var pageNumber = (int)ViewData["pageNo"];
    var pageSize = (int)ViewData["pageSize"];
    var filter = (string)ViewData["Filter"];

    var pagerModel = new GridPagerPartialViewModel(pageNumber, rowCount, pageSize, sortOrder, currentSort, "/Editor/Index", filter);
}
<script src="~/js/clipboard.min.js"></script>

<div class="pt-3">
    <div class="container">
        <div class="row">
            <div class="col">
                <h3 class="text-light">@ViewData["Title"]</h3>
                @if (showFirstPageBtn)
                {
                    <a class="btn btn-sm btn-primary" title="Create website home page" href="/Editor/Create">Create Home Page <i class="fa-solid fa-circle-arrow-right"></i></a>
                }
                @if (showFirstPageBtn == false && showFirstPageBtn)
                {
                    <a class="btn btn-sm btn-primary" title="Create a custom page when a user makes a request that cannot be found." href="/Editor/Create?title=Not%20Found">Create Not Found Page<i class="fa-solid fa-circle-arrow-right"></i></a>
                }
            </div>
        </div>
        <div class="row bg-dark">
            <div class="col-md-12 d-flex flex-row">
                <button id="btnFilter" class="btn btn-sm btn-primary" style="min-width:100px;">Filter <i class="fa-solid fa-filter"></i></button>
                <button id="btnOpen" title="Go to the version list for this page." class="btn btn-sm btn-primary" style="min-width:100px;" disabled>Go <i class="fa-solid fa-circle-arrow-right"></i></button>
                <button id="btnCreate" title="Create a page with this title." class="btn btn-sm btn-primary" style="min-width:100px;">Create <i class="fa-solid fa-circle-arrow-right"></i></button>
                <input id="combobox" autocomplete="off" placeholder="Search for a page ..." type="text" class="form-control bg-dark text-light" aria-label="Type to search for a page." style="height:32px" value="@filter">
            </div>
        </div>
        <div class="row bg-dark">
            <div class="col-md-6">
                @if (!isReviewer)
                {
                    <div class="btn-group" role="group" aria-label="Actions">
                        <a asp-action="Versions" asp-route-id="@homeArticleNumber" title="Edit home page" class="btn btn-sm btn-success">Edit home page</a>
                        <a class="btn btn-sm btn-primary" title="Create a new web page" asp-action="Create">New Page</a>
                        <a class="btn btn-sm btn-secondary" title="Create a new web page" asp-action="Index" asp-controller="Templates">Templates</a>
                        <a title="Manage Redirects" class="btn btn-sm btn-secondary" asp-action="Redirects">Redirects</a>
                        <a title="Manage Redirects" class="btn btn-sm btn-secondary" asp-action="Index" asp-controller="Layouts">Layouts</a>
                        <a title="Manage Redirects" class="btn btn-sm btn-secondary" asp-action="ReservedPaths" asp-controller="Editor">Reserved Paths</a>
                        <a title="Manage Trash" class="btn btn-sm btn-secondary" asp-action="Trash">Trash</a>
                    </div>
                }
            </div>
            <div class="col-md-6 d-flex justify-content-end">
                <partial name="~/Views/Shared/GridPager/_GridPager.cshtml" model="pagerModel"></partial>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="table-responsive custom-table-responsive">
                    <table class="table custom-table">
                        <thead>
                            <tr>
                                <th scope="col">
                                    Select
                                    @*<label class="control control--checkbox">
                                    <input type="checkbox" class="js-check-all">
                                    <span class="control__indicator"></span>
                                    </label>*@
                                </th>
                                <th scope="col"><i class="fa-solid fa-house"></i></th>
                                <th scope="col">#</th>
                                <th scope="col">Page</th>
                                <th scope="col">Last Updated</th>
                                <th scope="col"></th>
                                <th scope="col">Trash</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var row in Model)
                            {
                                <tr scope="row">
                                    <td scope="row">
                                        <a asp-action="Versions" asp-route-id="@row.ArticleNumber" title="Select" class="btn btn-sm fa-solid fa-play"></a>
                                    </td>
                                    <td>
                                        @if (row.UrlPath == "root")
                                        {
                                            <div title='Current home page.' class='btn btn-sm btn-success'><i class="fa-solid fa-house"></i></div>
                                        }
                                        else if (row.LastPublished.HasValue)
                                        {
                                            <a href='/Editor/NewHome/@row.ArticleNumber' title='Make this the new home page.' class='btn btn-sm btn-secondary'><i class="fa-solid fa-house"></i></a>
                                        }
                                    </td>
                                    <td>
                                        @row.ArticleNumber
                                    </td>
                                    <td>
                                        <a asp-action="Versions" asp-route-id="@row.ArticleNumber" title="Select">/@row.Title</a>
                                        @if (row.LastPublished.HasValue)
                                        {
                                            <small class="d-block">
                                                <span class="badge badge-primary"> Published: </span><span class='toLocalTimeZone'>@row.LastPublished.Value</span>
                                            </small>
                                        }
                                        else
                                        {
                                            <small class="d-block">
                                                <span class="badge badge-secondary">- DRAFT -</span>
                                            </small>
                                        }
                                    </td>
                                    <td>
                                        <div class='toLocalTimeZone'>@row.Updated</div>
                                    </td>
                                    <td>
                                        <a class="btn btn-sm btn-secondary" title="Create a clone of this page" asp-action="Clone" asp-route-id="@row.ArticleNumber"><i class="fa-solid fa-copy"></i> Clone</a>
                                    </td>
                                    <td>
                                        @if (canEdit && row.UrlPath != "root")
                                        {
                                            <button type='button' onclick='selectArticle("@row.ArticleNumber", "@row.Title")' class='btn btn-sm btn-secondary' data-bs-toggle='modal' data-bs-target='#delConfModal'><i title='Send to trash' class='fa-solid fa-trash'></i> Trash</button>
                                        }
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row bg-dark">
            <div class="col-md-12 d-flex justify-content-center">
                <partial name="~/Views/Shared/GridPager/_GridPager.cshtml" model="pagerModel"></partial>
            </div>
        </div>
    </div>
</div>
<form>
    <input id="selected" type="hidden" />
</form>

<!-- Modal -->
<div class="modal fade" id="delConfModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content text-bg-dark mt-5">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this page?</p>
                <p class="fs-5" id="articleTitle"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="sendToTrash()">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>

    var canEdit = @canEdit.ToString().ToLower();
    var clipboard = new ClipboardJS('.clipboard');
    clipboard.on('success',
        function (e) {
            console.info('Action:', e.action);
            console.info('Text:', e.text);
            console.info('Trigger:', e.trigger);
            alert("Copied: " + e.text);
            e.clearSelection();
        });

    var articleNumber;
    var articleTitle;

    function selectArticle(articleNo, title) {
        articleNumber = articleNo;
        $("#articleTitle").html("&quot;" + title + "&quot;");
        return true;
    }

    function sendToTrash() {
        window.location.href = "@Url.Action("TrashArticle", "Editor")/" + articleNumber;
    }

    $(document).ready(function () {
        
        $("body").addClass("cwps-editor-container");
        
        $(".toLocalTimeZone").each(function (index, element) {
            $(element).html(getLocalTime($(element).html()));
        });

        $("#btnCreate").hide();

        $("#btnCreate").click(function (e) {
            window.location.href = "@Url.Action("Create", "Editor")?title=" + $("#combobox").val();
        });

        // COMBOBOX
        $("#combobox").combobox({
            source: function (request, response) {

                $("#btnOpen").prop('disabled', true);
                $("#btnOpen").show();
                $("#btnCreate").hide();
                $("#btnFilter").prop('disabled', true);

                $.ajax({
                    url: "@Url.Action("GetArticleList","Editor")",
                    dataType: "json",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        let results = [];
                        let showCreate = true;
                        $.each(data, function (index, entity) {
                            var item = { label: entity.Title, value: entity.Title, url: entity.UrlPath, updated: entity.Updated, id: entity.ArticleNumber, published: entity.LastPublished };
                            results.push(item);
                            if (request.term.toLowerCase() === item.label.toLowerCase()) {
                                showCreate = false;
                            }
                        });
                        response(results);
                        var value = $("#combobox").val();

                        if (value !== null && value.length > 0) {
                            $("#btnFilter").prop('disabled', false);
                        }

                        $("#btnOpen").hide();

                        if (showCreate) {
                            $("#btnCreate").show();
                        }
                    }
                });
            },
            select: function (event, ui) {
                $("#btnCreate").hide();
                $("#btnOpen").show();
                $("#btnOpen").click(function () {
                    window.location.href = "@Url.Action("Versions", "Editor")/" + ui.item.id;
                });
                $("#btnOpen").prop('disabled', false);
            }
        });

        $("#combobox").keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                var url = "/Editor/Index?pageNo=0&sortOrder=@sortOrder&currentSort=@currentSort&pageSize=@pageSize&filter=" + $("#combobox").val();
                window.location.href = url;
            }
        });

        $("#btnFilter").click(function (e) {
            e.preventDefault();
            var url = "/Editor/Index?pageNo=0&sortOrder=@sortOrder&currentSort=@currentSort&pageSize=@pageSize&filter=" + $("#combobox").val();
            window.location.href = url;
        });


        if ("@filter" === "") {
            $("#btnFilter").prop('disabled', true);
        }
    });


</script>

