@model ArticleViewModel
@inject IOptions<CosmosConfig> options
@using System.Reflection
@using Cosmos.Cms.Common.Services.Configurations;
@using Microsoft.Extensions.Options;
@{
    var assemblyName = Assembly.GetExecutingAssembly().GetName();
    var isEditor = false;
    var isAdministrator = false;

    if (User != null && User.IsInRole("Editors"))
    {
        isEditor = true;
    }

    if (User != null && User.IsInRole("Administrators"))
    {
        isAdministrator = true;
    }

    var assemblyVersion = System.Reflection.Assembly.GetExecutingAssembly().GetName().Version;
}
<nav id="ccmsNavMenu" class="navbar navbar-expand-sm navbar-dark bg-dark" style="z-index: 20000000;">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">
            Cosmos WPS
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                @if (Model != null)
                {
                    <li class="nav-item dropdown">
                        <a id="navbarEditDropdown" onclick="loadDdEditMenu()" data-ccms-urlpath="@Model.UrlPath" class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Edit
                        </a>
                        <ul class="dropdown-menu dropdown-menu-dark" id="ddEditMenu">
                            <li><a class="dropdown-item" href="#">Choose version to edit:</a></li>
                            <li><hr class="dropdown-divider"></li>
                        </ul>
                    </li>
                }
                <li class="nav-item dropdown">
                    <a id="btnManage" href="#" role="button" class="nav-link dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                        Manage
                    </a>
                    <ul class="dropdown-menu dropdown-menu-dark" id="ddManageMenu">
                        <li class="dropdown-header bg-dark text-light">Website Content</li>
                        <li>
                            <a class="dropdown-item" title="List of pages on this website." href="/Editor/Index">Pages</a>
                        </li>
                        <li>
                            <a class="dropdown-item" title="Open files stored on this website." href="/FileManager/Index">Files</a>
                        </li>
                        @if (isAdministrator || isEditor)
                        {
                            <li>
                                <a class="dropdown-item" title="Manage page templates" href="/Templates/Index">Templates</a>
                            </li>
                            <li>
                                <a class="dropdown-item" title="Manage layouts" href="/Layouts/Index">Layouts</a>
                            </li>
                        }
                        <li>
                            <a id="btnPublicWebsite" class="dropdown-item" title="Open public (publisher) website" href="" target="_blank">Public Website</a>
                        </li>
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <a class="dropdown-item" title="Internal (non-public) file storage." href="/Code/Index">Internal Files</a>
                        </li>
                        @if (isAdministrator || isEditor)
                        {
                            <li><hr class="dropdown-divider"></li>
                            <li class="dropdown-header bg-dark text-light">System Admin</li>
                            <li>
                                <a class="dropdown-item" title="Manage user accounts." href="/Users/Index">Users</a>
                            </li>
                            <li>
                                <a class="dropdown-item" title="Content distribution network integration." href="@Url.Action("Index","Cosmos_Admin_Cdn")">CDN</a>
                            </li>
                        }
                    </ul>
                </li>
                <li class="nav-item"><span title="Cosmos WPS Version" class="nav-link text-mute">@assemblyVersion.ToString()</span></li>
            </ul>
            
            <div class="d-flex">
                <partial name="_LoginPartial" />
            </div>
        </div>
    </div>
</nav>
<script>

    function loadDdEditMenu() {
        const ddMenu = $("#ddEditMenu");

        ddMenu.html("Loading...");

        //var urlPath = $("#navbarEditDropdown").attr("data-ccms-urlpath");

        const iframe = document.getElementById("iFrameWebPage");
        const iframeWin = iframe.contentWindow || iframe.contentDocument.parentWindow;

        const urlPath = iframeWin.ccmsUrlPath;

        var loadList = @((Model != null).ToString().ToLower());

        if (loadList) {
            $.get("/Home/EditList?target=" + urlPath, function (data) {

                ddMenu.html("");
                $.each(data, function (index, element) {
                    var div = "<li>";
                    div += "<div class='dropdown-item'>";

                    div += "<div class='btn-group btn-group-sm' role='group'>";

                    if (element.UsesHtmlEditor === true) {
                        div += "<a class='btn btn-sm btn-secondary' title='Use the live view editor' href='/Editor/Edit/" + element.Id + "' style='width:90px;'>";
                    } else {
                        div += "<a class='btn btn-sm btn-secondary' title='Code editor' href='/Editor/EditCode/" + element.Id + "' style='width:90px;'>";
                    }

                    if (element.Published === null && element.Published !== "") {
                        div += "<span class='badge text-bg-secondary'>v." + element.VersionNumber + " DRAFT</span>";
                    } else {

                        var pDate = new Date(element.Published);
                        var today = new Date();

                        if (pDate > today) {
                            div += "<span class='badge text-bg-primary'>v." + element.VersionNumber + " Future</span>";
                        } else {
                            div += "<span class='badge text-bg-success'>v." + element.VersionNumber + " Published</span>";
                        }

                    }

                    div += "</a>";

                    div += "<a class='btn btn-sm btn-secondary' title='Code editor' href='/Editor/EditCode/" + element.Id + "'><img src='/images/monaco-vscode-logo.png' height='22' />  Code editor</a>";

                    if (element.UsesHtmlEditor === true) {
                        div += "<a class='btn btn-sm btn-secondary' title='Live editor' href='/Editor/Edit/" + element.Id + "'><img src='/images/ckeditor-5-proj-logo.svg' height='22' /> Live editor</a>";
                    } else {
                        div += "<a class='btn btn-sm btn-secondary' href='#' style='width:109px;'></a>";
                    }
                    div += "</div>";
                    div += "</div>";
                    div += "</li>";
                    ddMenu.append(div);
                });


                var endDiv = "<li><hr class='dropdown-divider'></li>";
                endDiv += "<a class='btn btn-sm btn-secondary ms-3' href='/Editor/Versions/" + data[0].ArticleNumber + "' class='dropdown-item'>All versions <i class='fa-solid fa-circle-right'></i></a>";
                ddMenu.append(endDiv);
            });
        }
    }

    function closeDropDowns() {
        $("#navbarEditDropdown").removeClass("show");
        $("#ddEditMenu").removeClass("show");
        $("#btnManage").removeClass("show");
        $("#ddManageMenu").removeClass("show");
    }

    $(document).ready(function () {
        setPublicSiteUrl();
    });

    function setPublicSiteUrl() {

        let publicBaseUrl = "@options.Value.SiteSettings.PublisherUrl.TrimEnd('/')";

        const iframe = document.getElementById("iFrameWebPage");

        if (typeof iframe !== "undefined" && iframe !== null) {
            var url = new URL(iframe.src);
            publicBaseUrl += url.pathname + url.search + url.hash;
        }

        $("#btnPublicWebsite").attr("href", publicBaseUrl);
    }
</script>
